// <auto-generated />
using System;
using AdoptNet.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AdoptNet.Migrations
{
    [DbContext(typeof(AdoptNetContext))]
<<<<<<< HEAD
    [Migration("20210517151158_LocatinAdopt")]
    partial class LocatinAdopt
=======
<<<<<<< HEAD:anypet/Migrations/20210519105312_User.Designer.cs
    [Migration("20210519105312_User")]
    partial class User
=======
    [Migration("20210517151158_LocatinAdopt")]
    partial class LocatinAdopt
>>>>>>> parent of beca518 (adding the users conrollers & chaing the about to cshtml & adding permissions for admin (only) and user.):anypet/Migrations/20210517151158_LocatinAdopt.Designer.cs
>>>>>>> parent of beca518 (adding the users conrollers & chaing the about to cshtml & adding permissions for admin (only) and user.)
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AdoptNet.Models.AdoptionDays", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AdoptionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LocationAdopt")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AdoptionDays");
                });

            modelBuilder.Entity("AdoptionDaysAssociation", b =>
                {
                    b.Property<int>("AdoptionDaysId")
                        .HasColumnType("int");

                    b.Property<int>("AssociationsId")
                        .HasColumnType("int");

                    b.HasKey("AdoptionDaysId", "AssociationsId");

                    b.HasIndex("AssociationsId");

                    b.ToTable("AdoptionDaysAssociation");
                });

            modelBuilder.Entity("anypet.Models.Animal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int>("AssociationId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<int>("Kind")
                        .HasColumnType("int");

                    b.Property<int>("Location")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AssociationId");

                    b.ToTable("Animal");
                });

            modelBuilder.Entity("anypet.Models.AnimalImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AnimalId")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AnimalId")
                        .IsUnique();

                    b.ToTable("AnimalImage");
                });

            modelBuilder.Entity("anypet.Models.Association", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmailOfUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Location")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("PhoneNumber")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Association");
                });

            modelBuilder.Entity("anypet.Models.AssociationImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AssociationId")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AssociationId")
                        .IsUnique();

                    b.ToTable("AssociationImage");
                });

            modelBuilder.Entity("anypet.Models.UserReg", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(9)
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfCreate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailOfUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrivateName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ThereIsAnimal")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("UserReg");
                });

            modelBuilder.Entity("AdoptionDaysAssociation", b =>
                {
                    b.HasOne("AdoptNet.Models.AdoptionDays", null)
                        .WithMany()
                        .HasForeignKey("AdoptionDaysId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("anypet.Models.Association", null)
                        .WithMany()
                        .HasForeignKey("AssociationsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("anypet.Models.Animal", b =>
                {
                    b.HasOne("anypet.Models.Association", "Association")
                        .WithMany("Animals")
                        .HasForeignKey("AssociationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Association");
                });

            modelBuilder.Entity("anypet.Models.AnimalImage", b =>
                {
                    b.HasOne("anypet.Models.Animal", "Animal")
                        .WithOne("Image")
                        .HasForeignKey("anypet.Models.AnimalImage", "AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animal");
                });

            modelBuilder.Entity("anypet.Models.AssociationImage", b =>
                {
                    b.HasOne("anypet.Models.Association", "Association")
                        .WithOne("Image")
                        .HasForeignKey("anypet.Models.AssociationImage", "AssociationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Association");
                });

            modelBuilder.Entity("anypet.Models.Animal", b =>
                {
                    b.Navigation("Image");
                });

            modelBuilder.Entity("anypet.Models.Association", b =>
                {
                    b.Navigation("Animals");

                    b.Navigation("Image");
                });
#pragma warning restore 612, 618
        }
    }
}
